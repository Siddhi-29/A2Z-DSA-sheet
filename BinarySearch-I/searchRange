/*
Problem: Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.
If target is not found in the array, return [-1, -1].
You must write an algorithm with O(log n) runtime complexity.

Solution:
*/
class Solution {
    public int[] searchRange(int[] nums, int target) {
        int result [] = {-1, -1};
        int start = 0, end = nums.length-1;
        while(start <= end){
            int mid = start + (end-start)/2;
            if(nums[mid] >= target){
                end = mid-1;
            }
            else{
                start = mid+1;
            }
            if(nums[mid] == target){
                result[0] = mid;
            }
        }
        start = 0;
        end = nums.length-1;
        
        while(start <= end){
            int mid = start + (end-start)/2;
            if(nums[mid] <= target){
                start = mid+1;
            }
            else{
                end = mid-1;
            }
            if(nums[mid] == target){
                result[1] = mid;
            }
        }
        return result;
    }
}
