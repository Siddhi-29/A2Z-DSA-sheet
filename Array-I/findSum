/*
Problem: Subarray with 0 sum

Given an array of integers. Find if there is a subarray (of size at-least one) with 0 sum. You just need to return true/false depending upon whether there is a subarray present with 0-sum or not. Printing will be taken care by the driver code.

Solution:
*/

class Solution{
    //Function to check whether there is a subarray present with 0-sum or not.
    static boolean findsum(int arr[],int n)
    {
        //Your code here
        int currSum = 0;
        
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        
        for( int i = 0; i<n; i++){
            if(arr[i] == 0){
                return true;
            }
            
            currSum += arr[i];
            
            if(!map.containsKey(currSum)){
                map.put(currSum, i);
            }
            else{
                return true;
            }
        }
        return false;
    }//4,0  6,1  3,2   4,3  
    //4,0, 6,1  6,2
}
