/*
Problem: Longest Sub-Array with Sum K

Given an array arr containing n integers and an integer k. Your task is to find the length of the longest Sub-Array with the sum of the elements equal to the given value k.

Solution:
*/

class Solution{
    // Function for finding maximum and value pair
    public static int lenOfLongSubarr (int A[], int N, int K) {
        //Complete the function
        int currSum = 0;
        int maxLength = 0;
        
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        for( int i=0; i<N; i++) {
            
            currSum += A[i];
            
            if(map.containsKey(currSum-K)){
                maxLength = Math.max(maxLength,i-map.get(currSum-K));
            }
            if(!map.containsKey(currSum)){
                map.put(currSum, i);
            }
        }
        return maxLength;
    }// 2, 10, 8, 7, 1, 9
    //2,0    12,1    20,2    27,3 
    
    //0,-1  10,0    15,1    maxlength 2     17,2    24,3    25,4    
    //maxlength 4   34,5
    
}
