/*
Problem: Introduction to Doubly Linked List

Geek is learning data structures and is familiar with linked lists, but he's curious about how to access the previous element in a linked list in the same way that we access the next element. His teacher explains doubly linked lists to him.
Given an integer array arr of size n. Construct the doubly linked list from arr and return the head of it.

Solution:
*/

class Solution {
    Node constructDLL(int arr[]) {
        // Code here
        if (arr == null || arr.length == 0) {
            return null; // Return null if the array is empty
        }
        // Initialize the head with the first element
        Node head = new Node(arr[0]);
        Node curr = head;

        for (int i=1; i<arr.length; i++) {
            
            // Create a new node for each element
            Node newNode = new Node(arr[i]); 
            // Set the next pointer of the current node
            curr.next = newNode; 
            // Set the prev pointer of the new node
            newNode.prev = curr; 
            // Move the current pointer to the new node
            curr = newNode; 
            
        }
        // Return the head of the doubly linked list
        return head; 
    }
    
}
