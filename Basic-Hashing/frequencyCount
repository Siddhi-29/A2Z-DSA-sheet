/*
Problem: Frequencies of Limited Range Array Elements

Given an array arr[] of n positive integers which can contain integers from 1 to p where elements can be repeated or can be absent from the array.
Your task is to count the frequency of all numbers from 1 to n. Do modify the array in-place changes in arr[], such that arr[i] = frequency(i) and assume 1-based indexing.

Note: The elements greater than n in the array can be ignored for counting. 

Solution:
*/
class Solution{
    //Function to count the frequency of all elements from 1 to N in the array.
    public static void frequencyCount(int arr[], int N, int P)
    {
        // code here
        HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int i=0; i<N; i++){
            map.put(arr[i],map.getOrDefault(arr[i],0)+1);
        }
        for(int i=1;i<=N;i++){
            if(!map.containsKey(i)){
                arr[i-1] = 0;
            }
            else
                arr[i-1] = map.get(i);
        }
    }
}
